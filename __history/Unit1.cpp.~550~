
//---------------------------------------------------------------------------

#include <vcl.h>
#include <algorithm>
#include <Vcl.Graphics.hpp>
#include <Vcl.Imaging.jpeg.hpp>
#include <System.IOUtils.hpp>
#include <Vcl.Dialogs.hpp>

#include <cmath>
#pragma hdrstop

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
using namespace std;

//глобальные переменные
bool draw=false;
int flag=-1;
bool draw_polyline=false;
bool first_point=false;
bool poly_first_point=false;
bool lastik=false;

TPoint points[100];
TPoint lastPoint;
int cnt=0;

struct CustomLineStyle {
    int styleIndex;
    TColor color;
    int width;

    CustomLineStyle(int index = 0, TColor c = clBlack, int w = 1) : styleIndex(index), color(c), width(w) {}

    void ApplyToCanvas(TCanvas* canvas) {
        canvas->Pen->Color = color;
        canvas->Pen->Width = width;
        // Здесь можно добавить логику для применения кастомных стилей (штрихи, точки и т.д.)
    }
};

CustomLineStyle currentLineStyle;


//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
    // Установка начальных значений
	currentLineStyle.color = ColorBox1->Selected;
	currentLineStyle.width = TrackBar1->Position;
}


void TForm1::DrawCustomLine(TCanvas* canvas, int xn, int yn, int xk, int yk)
{
	// 1. Применяем цвет и толщину к перу
    canvas->Pen->Color = currentLineStyle.color;
    canvas->Pen->Width = currentLineStyle.width;
    // 2. Устанавливаем стиль пера по умолчанию (psSolid), чтобы кастомные стили работали корректно
    canvas->Pen->Style = psSolid;

    int x = 0;
    int y = 0;
    float k;
    int b = 0; // Счетчик для кастомных стилей
    TColor drawColor = currentLineStyle.color; // Цвет рисования

    switch (currentLineStyle.styleIndex)
    {
        case 0: // Сплошная линия
        {
            // Рисуем сплошную линию, используя Canvas->Pixels
            if (abs(xk - xn) > abs(yk - yn))
            {
                if (xk > xn)
                {
                    k = 1.0 * (yk - yn) / (xk - xn);
                    for (x = xn; x <= xk; x++)
                    {
                        y = ceil(yn + (x - xn) * k);
                        PaintBox1->Canvas->Pixels[x][y] = drawColor;
                    }
                }
                else
                {
                    k = 1.0 * (yn - yk) / (xn - xk);
                    for (x = xk; x <= xn; x++)
                    {
                        y = ceil(yk + (x - xk) * k);
                        PaintBox1->Canvas->Pixels[x][y] = drawColor;
                    }
                }
            }
            else
            {
                if (yk > yn)
                {
                    k = 1.0 * (xk - xn) / (yk - yn);
                    for (y = yn; y <= yk; y++)
                    {
                        x = ceil(xn + (y - yn) * k);
                        PaintBox1->Canvas->Pixels[x][y] = drawColor;
                    }
                }
                else
                {
                    k = 1.0 * (xn - xk) / (yn - yk);
                    for (y = yk; y <= yn; y++)
                    {
                        x = ceil(xk + (y - yk) * k);
                        PaintBox1->Canvas->Pixels[x][y] = drawColor;
                    }
                }
            }
            break;
        }

        case 1: // Штрих
        {
            if (abs(xk - xn) > abs(yk - yn))
            {
                if (xk > xn)
                {
                    k = 1.0 * (yk - yn) / (xk - xn);
                    for (x = xn; x <= xk; x++)
                    {
                        y = ceil(yn + (x - xn) * k);
                        if (b < 5) // Рисуем 5 пикселей
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 10) b = 0; // Пропускаем 5 пикселей
                    }
                }
                else
                {
                    k = 1.0 * (yn - yk) / (xn - xk);
                    for (x = xk; x <= xn; x++)
                    {
                        y = ceil(yk + (x - xk) * k);
                        if (b < 5) // Рисуем 5 пикселей
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 10) b = 0; // Пропускаем 5 пикселей
                    }
                }
            }
            else
            {
                if (yk > yn)
                {
                    k = 1.0 * (xk - xn) / (yk - yn);
                    for (y = yn; y <= yk; y++)
                    {
                        x = ceil(xn + (y - yn) * k);
                        if (b < 5) // Рисуем 5 пикселей
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 10) b = 0; // Пропускаем 5 пикселей
                    }
                }
                else
                {
                    k = 1.0 * (xn - xk) / (yn - yk);
                    for (y = yk; y <= yn; y++)
                    {
                        x = ceil(xk + (y - yk) * k);
                        if (b < 5) // Рисуем 5 пикселей
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 10) b = 0; // Пропускаем 5 пикселей
                    }
                }
            }
            break;
        }

        case 2: // Штрих-пунктир
        {
            if (abs(xk - xn) > abs(yk - yn))
            {
                if (xk > xn)
                {
                    k = 1.0 * (yk - yn) / (xk - xn);
                    for (x = xn; x <= xk; x++)
                    {
                        y = ceil(yn + (x - xn) * k);
                        if (b < 5) // Рисуем 5 пикселей (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        else if (b == 5) // Рисуем точку
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 15) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (yn - yk) / (xn - xk);
                    for (x = xk; x <= xn; x++)
                    {
                        y = ceil(yk + (x - xk) * k);
                        if (b < 5) // Рисуем 5 пикселей (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        else if (b == 5) // Рисуем точку
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 15) b = 0; // Пропускаем пиксели
                    }
                }
            }
            else
            {
                if (yk > yn)
                {
                    k = 1.0 * (xk - xn) / (yk - yn);
                    for (y = yn; y <= yk; y++)
                    {
                        x = ceil(xn + (y - yn) * k);
                        if (b < 5) // Рисуем 5 пикселей (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        else if (b == 5) // Рисуем точку
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 15) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (xn - xk) / (yn - yk);
                    for (y = yk; y <= yn; y++)
                    {
                        x = ceil(xk + (y - yk) * k);
                        if (b < 5) // Рисуем 5 пикселей (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        else if (b == 5) // Рисуем точку
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 15) b = 0; // Пропускаем пиксели
                    }
                }
            }
            break;
        }

        case 3: // Пунктирная
        {
            if (abs(xk - xn) > abs(yk - yn))
            {
                if (xk > xn)
                {
                    k = 1.0 * (yk - yn) / (xk - xn);
                    for (x = xn; x <= xk; x++)
                    {
                        y = ceil(yn + (x - xn) * k);
                        if (b == 0) // Рисуем только один пиксель (точку)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем 4 пикселя
                    }
                }
                else
                {
                    k = 1.0 * (yn - yk) / (xn - xk);
                    for (x = xk; x <= xn; x++)
                    {
                        y = ceil(yk + (x - xk) * k);
                        if (b == 0) // Рисуем только один пиксель (точку)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем 4 пикселя
                    }
                }
            }
            else
            {
                if (yk > yn)
                {
                    k = 1.0 * (xk - xn) / (yk - yn);
                    for (y = yn; y <= yk; y++)
                    {
                        x = ceil(xn + (y - yn) * k);
                        if (b == 0) // Рисуем только один пиксель (точку)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем 4 пикселя
                    }
                }
                else
                {
                    k = 1.0 * (xn - xk) / (yn - yk);
                    for (y = yk; y <= yn; y++)
                    {
                        x = ceil(xk + (y - yk) * k);
                        if (b == 0) // Рисуем только один пиксель (точку)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем 4 пикселя
                    }
                }
            }
            break;
        }

        case 4: // Косая линия
        {
            if (abs(xk - xn) > abs(yk - yn))
            {
                if (xk > xn)
                {
                    k = 1.0 * (yk - yn) / (xk - xn);
                    for (x = xn; x <= xk; x++)
                    {
                        y = ceil(yn + (x - xn) * k);
                        if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (yn - yk) / (xn - xk);
                    for (x = xk; x <= xn; x++)
                    {
                        y = ceil(yk + (x - xk) * k);
                        if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
            }
            else
            {
                if (yk > yn)
                {
                    k = 1.0 * (xk - xn) / (yk - yn);
                    for (y = yn; y <= yk; y++)
                    {
                        x = ceil(xn + (y - yn) * k);
                         if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (xn - xk) / (yn - yk);
                    for (y = yk; y <= yn; y++)
                    {
                        x = ceil(xk + (y - yk) * k);
                         if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
            }
            break;
        }
        case 5: // Зигзаг
		{
              if (abs(xk - xn) > abs(yk - yn))
            {
                if (xk > xn)
                {
                    k = 1.0 * (yk - yn) / (xk - xn);
                    for (x = xn; x <= xk; x++)
                    {
                        y = ceil(yn + (x - xn) * k);
                         if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (yn - yk) / (xn - xk);
                    for (x = xk; x <= xn; x++)
                    {
                        y = ceil(yk + (x - xk) * k);
                        if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
            }
            else
            {
                if (yk > yn)
                {
                    k = 1.0 * (xk - xn) / (yk - yn);
                    for (y = yn; y <= yk; y++)
                    {
                        x = ceil(xn + (y - yn) * k);
                        if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (xn - xk) / (yn - yk);
                    for (y = yk; y <= yn; y++)
                    {
                        x = ceil(xk + (y - yk) * k);
                        if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
            }
            break;
		}
		case 6: // Волна
		{
             if (abs(xk - xn) > abs(yk - yn))
            {
                if (xk > xn)
                {
                    k = 1.0 * (yk - yn) / (xk - xn);
                    for (x = xn; x <= xk; x++)
                    {
                        y = ceil(yn + (x - xn) * k);
                        if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (yn - yk) / (xn - xk);
                    for (x = xk; x <= xn; x++)
                    {
                        y = ceil(yk + (x - xk) * k);
                         if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
            }
            else
            {
                if (yk > yn)
                {
                    k = 1.0 * (xk - xn) / (yk - yn);
                    for (y = yn; y <= yk; y++)
                    {
                        x = ceil(xn + (y - yn) * k);
                         if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (xn - xk) / (yn - yk);
                    for (y = yk; y <= yn; y++)
                    {
                        x = ceil(xk + (y - yk) * k);
                          if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
            }
            break;
		}
        case 7:  // Круги
		{
              if (abs(xk - xn) > abs(yk - yn))
            {
                if (xk > xn)
                {
                    k = 1.0 * (yk - yn) / (xk - xn);
                    for (x = xn; x <= xk; x++)
                    {
                        y = ceil(yn + (x - xn) * k);
                        if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (yn - yk) / (xn - xk);
                    for (x = xk; x <= xn; x++)
                    {
                        y = ceil(yk + (x - xk) * k);
                         if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
            }
            else
            {
                if (yk > yn)
                {
                    k = 1.0 * (xk - xn) / (yk - yn);
                    for (y = yn; y <= yk; y++)
                    {
                        x = ceil(xn + (y - yn) * k);
                          if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (xn - xk) / (yn - yk);
                    for (y = yk; y <= yn; y++)
                    {
                        x = ceil(xk + (y - yk) * k);
                         if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
            }
            break;
		}
        case 8: // Квадраты
		{
                if (abs(xk - xn) > abs(yk - yn))
            {
                if (xk > xn)
                {
                    k = 1.0 * (yk - yn) / (xk - xn);
                    for (x = xn; x <= xk; x++)
                    {
                        y = ceil(yn + (x - xn) * k);
                         if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (yn - yk) / (xn - xk);
                    for (x = xk; x <= xn; x++)
                    {
                        y = ceil(yk + (x - xk) * k);
                         if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
            }
            else
            {
                if (yk > yn)
                {
                    k = 1.0 * (xk - xn) / (yk - yn);
                    for (y = yn; y <= yk; y++)
                    {
                        x = ceil(xn + (y - yn) * k);
                          if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (xn - xk) / (yn - yk);
                    for (y = yk; y <= yn; y++)
                    {
                        x = ceil(xk + (y - yk) * k);
                         if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        b++;
                        if (b >= 5) b = 0; // Пропускаем пиксели
                    }
                }
            }
            break;
		}

        case 9: // 2 тире точка
        {
             if (abs(xk - xn) > abs(yk - yn))
            {
                if (xk > xn)
                {
                    k = 1.0 * (yk - yn) / (xk - xn);
                    for (x = xn; x <= xk; x++)
                    {
                        y = ceil(yn + (x - xn) * k);
                            if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        else if (b == 3) // Рисуем точку
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                         b++;
                        if (b >= 7) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (yn - yk) / (xn - xk);
                    for (x = xk; x <= xn; x++)
                    {
                        y = ceil(yk + (x - xk) * k);
                            if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        else if (b == 3) // Рисуем точку
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                         b++;
                        if (b >= 7) b = 0; // Пропускаем пиксели
                    }
                }
            }
            else
            {
                if (yk > yn)
                {
                    k = 1.0 * (xk - xn) / (yk - yn);
                    for (y = yn; y <= yk; y++)
                    {
                        x = ceil(xn + (y - yn) * k);
                           if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        else if (b == 3) // Рисуем точку
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                         b++;
                        if (b >= 7) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (xn - xk) / (yn - yk);
                    for (y = yk; y <= yn; y++)
                    {
                        x = ceil(xk + (y - yk) * k);
                         if (b < 3) // Рисуем 3 пикселя (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        else if (b == 3) // Рисуем точку
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                         b++;
                        if (b >= 7) b = 0; // Пропускаем пиксели
                    }
                }
            }
            break;
        }
        case 10: // Длинное тире, короткое тире
        {
              if (abs(xk - xn) > abs(yk - yn))
            {
                if (xk > xn)
                {
                    k = 1.0 * (yk - yn) / (xk - xn);
                    for (x = xn; x <= xk; x++)
                    {
                        y = ceil(yn + (x - xn) * k);
                           if (b < 5) // Рисуем 5 пикселей (штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                         b++;
                        if (b >= 8) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (yn - yk) / (xn - xk);
                    for (x = xk; x <= xn; x++)
                    {
                        y = ceil(yk + (x - xk) * k);
                           if (b < 2) // Рисуем 2 пикселя (короткий штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        else if (b >5){
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                         b++;
                        if (b >= 8) b = 0; // Пропускаем пиксели
                    }
                }
            }
            else
            {
                if (yk > yn)
                {
                    k = 1.0 * (xk - xn) / (yk - yn);
                    for (y = yn; y <= yk; y++)
                    {
                        x = ceil(xn + (y - yn) * k);
                           if (b < 5) // Рисуем 5 пикселей (штрих)
                        {
                            PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                         b++;
                        if (b >= 8) b = 0; // Пропускаем пиксели
                    }
                }
                else
                {
                    k = 1.0 * (xn - xk) / (yn - yk);
                    for (y = yk; y <= yn; y++)
                    {
                        x = ceil(xk + (y - yk) * k);
                         if (b < 2) // Рисуем 2 пикселя (короткий штрих)
                        {
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                        else if (b >5){
                             PaintBox1->Canvas->Pixels[x][y] = drawColor;
                        }
                         b++;
                        if (b >= 8) b = 0; // Пропускаем пиксели
                    }
                }
            }
            break;
        }
		default: // Если стиль не определен, рисуем сплошную линию
		{
			// Рисуем сплошную линию, используя Canvas->Pixels
			if (abs(xk - xn) > abs(yk - yn)) {
				if (xk > xn) {
					k = 1.0 * (yk - yn) / (xk - xn);
					for (x = xn; x <= xk; x++) {
						y = ceil(yn + (x - xn) * k);
						PaintBox1->Canvas->Pixels[x][y] = drawColor;
					}
				} else {
					k = 1.0 * (yn - yk) / (xn - xk);
					for (x = xk; x <= xn; x++) {
						y = ceil(yk + (x - xk) * k);
						 PaintBox1->Canvas->Pixels[x][y] = drawColor;
					}
				}
            } else {
                if (yk > yn) {
                    k = 1.0 * (xk - xn) / (yk - yn);
                    for (y = yn; y <= yk; y++) {
                        x = ceil(xn + (y - yn) * k);
                       PaintBox1->Canvas->Pixels[x][y] = drawColor;
                    }
                } else {
                    k = 1.0 * (xn - xk) / (yn - yk);
                    for (y = yk; y <= yn; y++) {
                        x = ceil(xk + (y - yk) * k);
                        PaintBox1->Canvas->Pixels[x][y] = drawColor;
                    }
                }
            }
            break;
        }
    }
}

void __fastcall TForm1::PaintBox1MouseDown(TObject *Sender, TMouseButton Button, TShiftState Shift,
		  int X, int Y)
{
	PaintBox1->Canvas->Pen->Color = ColorBox1->Selected; // Возвращаем цвет
	PaintBox1->Canvas->Pen->Width = TrackBar1->Position;  // Возвращаем ширину
	currentLineStyle.ApplyToCanvas(PaintBox1->Canvas);
    if (lastik) {
        PaintBox1->Canvas->Pen->Color = clWhite;
		PaintBox1->Canvas->Brush->Color = clWhite;
        PaintBox1->Canvas->Ellipse(X - 10, Y - 10, X + 10, Y + 10); // Пример стирания
        return;
    }


//нажатие на мышь
	if (draw==true) {
		points[cnt] = Point(X, Y);
		if (flag == 0) { // Точка
        	DrawCustomLine(PaintBox1->Canvas, X, Y,X,Y);
			PaintBox1->Canvas->Ellipse(points[cnt].X - 2, points[cnt].Y - 2, points[cnt].X + 2, points[cnt].Y + 2);
			cnt++;
		}
		else if (flag==1) { // Отрезок
			if (!first_point) {
				points[cnt] = Point(X, Y);
				int x_start=points[cnt].X;
				int y_start=points[cnt].Y;
				PaintBox1->Canvas->MoveTo(x_start, y_start);
				cnt++;
				first_point=true;
			}
			else{
				points[cnt] = Point(X, Y);
                //DrawCustomLine(PaintBox1->Canvas, X, Y, X, Y);
				DrawCustomLine(PaintBox1->Canvas, points[cnt-1].X, points[cnt-1].Y, points[cnt].X, points[cnt].Y);
				cnt++;
				first_point=false;
			}
        }
		else if (flag==2){   //окружность
			static int x_center=0;
			static int y_center=0;
			if (!first_point) {
				x_center = X;
				y_center = Y;
				points[cnt] = Point(x_center, y_center);
				cnt++;
				first_point=true;
				}
			else{
				int radius = (sqrt(pow(x_center - X, 2) + pow(y_center - Y, 2)));
                //DrawCustomLine(PaintBox1->Canvas, X, Y, X, Y);
				PaintBox1->Canvas->Ellipse(x_center - radius, y_center - radius, x_center + radius, y_center + radius);
				cnt++;
				first_point = false;
			}
		}
		else if (flag==3){
		//дуга
			static int x1 = 0, y1 = 0;
			static int x2 = 0, y2 = 0;
			static float step = 0.001;
			static float u=0.0l;
			static int num=0;
			if (num == 0) {
				// Первая точка
				x1 = X;
				y1 = Y;
				points[cnt] = Point(X, Y);
				cnt++;
				PaintBox1->Canvas->Ellipse(x1 - 2, y1 - 2, x1 + 2, y1 + 2);
				num++;
			}
			else if (num == 1) {
				// Вторая точка
				x2 = X;
				y2 = Y;
				points[cnt] = Point(X, Y);
				cnt++;
				PaintBox1->Canvas->Ellipse(x2 - 2, y2 - 2, x2 + 2, y2 + 2);
				num++;
			}
			else if (num == 2) {
				// Третья точка
				int x3 = X;
				int y3 = Y;
				points[cnt] = Point(X, Y);
				cnt++;
				PaintBox1->Canvas->Ellipse(x3 - 2, y3 - 2, x3 + 2, x3 + 2);

				for (u = 0.0; u <= 1.0; u +=step) {
					/*безье*/
					int x=(1-u)*(1-u)*(1-u)*x1+3*(1-u)*(1-u)*u*x2+3*u*u*(1-u)*x2+u*u*u*x3;
					int y=(1-u)*(1-u)*(1-u)*y1+3*(1-u)*(1-u)*u*y2+3*u*u*(1-u)*y2 +u*u*u*y3;
                    //DrawCustomLine(PaintBox1->Canvas, X, Y, X, Y); //не нужно здесь
					PaintBox1->Canvas->Pixels[x][y] = ColorBox1->Selected;
				}
				num=0;
			}
		}
		else if (flag==4){
			//прямоугольник
			static int x_rec=0;
			static int y_rec=0;
			if (!first_point) {
				points[cnt] = Point(X, Y);
				x_rec=points[cnt].X;
				y_rec=points[cnt].Y;
				cnt++;
				first_point=true;
			}
			else{
				points[cnt] = Point(X, Y);
                //DrawCustomLine(PaintBox1->Canvas, X, Y, X, Y);
				PaintBox1->Canvas->Rectangle(x_rec, y_rec, points[cnt].X, points[cnt].Y );
				cnt++;
                first_point=false;
			}
		}
	}


	if (draw_polyline==true) {
		if(flag==5){
			static int x_start=0;//points[cnt].X;
			static int y_start=0;//points[cnt].Y;
			if(!poly_first_point){
                x_start=X;
				y_start=Y;
				points[cnt] = Point(X, Y);
				PaintBox1->Canvas->MoveTo(x_start, y_start);
				cnt++;
				poly_first_point=true;
                lastPoint.X = X;
                lastPoint.Y = Y;
			}
			else{
				points[cnt] = Point(X, Y);
				int x_end=points[cnt].X;
				int y_end=points[cnt].Y;
				//PaintBox1->Canvas->MoveTo(x_start, y_start);
                //DrawCustomLine(PaintBox1->Canvas, X, Y, X, Y);
				DrawCustomLine(PaintBox1->Canvas, lastPoint.X, lastPoint.Y, x_end, y_end);
				cnt++;
				lastPoint.X=x_end;
				lastPoint.Y=y_end;
				//x_start=lastPoint.X;
				//y_start=lastPoint.Y;
			}
		}
		if(flag==6){
		static int x_start=0;//points[cnt].X;
		static int y_start=0;//points[cnt].Y;
		static int x_end =0; //points[cnt].X;
		static int y_end =0; //points[cnt].Y;
		static int x2 = 0, y2 = 0;
		static float step = 0.001;
		static float u=0.0l;
		static int num=0;
			if(!poly_first_point){
				x_start=X;
				y_start=Y;
				points[cnt] = Point(X, Y);
				cnt++;
				PaintBox1->Canvas->Ellipse(x_start - 2, y_start - 2, x_start + 2, y_start + 2);
				poly_first_point=true;
                lastPoint.X = X;
				lastPoint.Y = Y;
				num=1;
			}
			else{
				if (num == 1) {
					// Вторая точка
					x2 = X;
					y2 = Y;
					points[cnt] = Point(X, Y);
					cnt++;
					PaintBox1->Canvas->Ellipse(x2 - 2, y2 - 2, x2 + 2, y2 + 2);
					num++;
				}
				else if (num == 2) {
					// Третья точка
					int x_end = X;
					int y_end = Y;
					points[cnt] = Point(X, Y);
					cnt++;
					PaintBox1->Canvas->Ellipse(x_end - 2, y_end - 2, x_end + 2, x_end + 2);
					for (u = 0.0; u <= 1.0; u +=step) {
						/*безье*/
						int x=(1-u)*(1-u)*(1-u)*x_start+3*(1-u)*(1-u)*u*x2+3*u*u*(1-u)*x2+u*u*u*x_end;
						int y=(1-u)*(1-u)*(1-u)*y_start+3*(1-u)*(1-u)*u*y2+3*u*u*(1-u)*y2 +u*u*u*y_end;
                       // DrawCustomLine(PaintBox1->Canvas, X, Y, X, Y);
						PaintBox1->Canvas->Pixels[x][y] = ColorBox1->Selected;
					}
					num=1;
					lastPoint.X=X;
                    lastPoint.Y=Y;
					x_start=lastPoint.X;
					y_start=lastPoint.Y;
				}
			}
		}
	}
}
//---------------------------------------------------------------------------

void __fastcall TForm1::PaintBox1Paint(TObject *Sender)
{//
}
//---------------------------------------------------------------------------

void __fastcall TForm1::RadioGroup1Click(TObject *Sender)
{ flag=-1;
	first_point=false;
	poly_first_point=false;
	RadioGroup2->ItemIndex=-1;
 if (draw==true) {
	if (RadioGroup1->ItemIndex==0) {
	//точка
	flag=0;
	}
	else if (RadioGroup1->ItemIndex==1){
	//отрезок
	flag=1;
	}
	else if (RadioGroup1->ItemIndex==2){
	//окружность
	flag=2;
	}
	else if (RadioGroup1->ItemIndex==3){
	//дуга
	flag=3;
	}
	else{
	//прямоугольник
	flag=4;
	}
  }

}
//---------------------------------------------------------------------------

void __fastcall TForm1::RadioGroup2Click(TObject *Sender)
{ flag=-1;
	//first_point=false;
	//poly_first_point=false;
	RadioGroup1->ItemIndex=-1;
	if (draw_polyline==true) {
		if (RadioGroup2->ItemIndex==0){
		//отрезок
			flag=5;
		}
		else{
		//дуга
			flag=6;
		}
  }

}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button1Click(TObject *Sender)
{draw_polyline=false;
draw=true;
RadioGroup1->Enabled=true;
RadioGroup2->Enabled=false;
RadioGroup2->ItemIndex=-1;
lastik=false;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button5Click(TObject *Sender)
{  draw=false;
   draw_polyline=true;
   RadioGroup2->Enabled=true;
   RadioGroup1->Enabled=false;
   RadioGroup1->ItemIndex=-1;
   lastik=false;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button2Click(TObject *Sender)
{
lastik=true;
draw=false;
draw_polyline=false;
RadioGroup1->Enabled=false;
RadioGroup2->Enabled=false;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button3Click(TObject *Sender)
{   //сохранить
 TBitmap *bmp = new TBitmap();
	//TSaveDialog *saveDialog = new TSaveDialog(this); // Создаем SaveDialog

    try {

		SaveDialog1->Title = "Сохранить изображение";
		SaveDialog1->DefaultExt = "bmp"; // Расширение по умолчанию
		SaveDialog1->Filter = "JPEG Files (*.jpg;*.jpeg)|*.jpg;*.jpeg|All files (*.*)|*.*"; // Фильтры файлов
		SaveDialog1->InitialDir = ExtractFilePath("C:\\Users\\user\Desktop\\"); // Начальная директория

		// Показываем диалоговое окно
		if (SaveDialog1->Execute()) {
			bmp->Width = PaintBox1->Width;
			bmp->Height = PaintBox1->Height;

			bmp->Canvas->CopyRect(Rect(0, 0, PaintBox1->Width, PaintBox1->Height),
								  PaintBox1->Canvas,
								  Rect(0, 0, PaintBox1->Width, PaintBox1->Height));

			// Сохраняем в зависимости от выбранного расширения
			String filePath = SaveDialog1->FileName;
			String fileExt = ExtractFileExt(filePath).LowerCase();

			if (fileExt == ".bmp") {
				bmp->SaveToFile(filePath);
			} else if (fileExt == ".jpg" || fileExt == ".jpeg") {
				TJPEGImage *jpg = new TJPEGImage();
				try {
					jpg->Assign(bmp);
					jpg->CompressionQuality = 90;
					jpg->SaveToFile(filePath);
				} __finally {
					delete jpg;
				}
			} else {
				ShowMessage("Неподдерживаемый формат файла!");
				return;
			}

			ShowMessage("Изображение сохранено!");
		}

	} catch (...) {
		ShowMessage("Ошибка при сохранении изображения!");
	}

	delete bmp;

}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button4Click(TObject *Sender)
{
//открыть
//TOpenDialog *openDialog = new TOpenDialog(this); // Создаем OpenDialog
	TBitmap *bmp = new TBitmap(); // Создаем TBitmap

	try {
		// Настраиваем OpenDialog
		OpenDialog1->Title = "Открыть изображение";
		OpenDialog1->Filter = "JPEG Files (*.jpg;*.jpeg)|*.jpg;*.jpeg|All files (*.*)|*.*";
		OpenDialog1->InitialDir = ExtractFilePath("C:\\Users\\user\Desktop\\");

        // Показываем диалоговое окно
		if (OpenDialog1->Execute()) {
			String filePath = OpenDialog1->FileName;
            String fileExt = ExtractFileExt(filePath).LowerCase();

            try { // try-finally для bmp->LoadFromFile
                if (fileExt == ".bmp") {
                    bmp->LoadFromFile(filePath);
                } else if (fileExt == ".jpg" || fileExt == ".jpeg") {
                    TJPEGImage *jpg = new TJPEGImage();
                    try {
                        jpg->LoadFromFile(filePath);
                        bmp->Assign(jpg);  // Конвертируем JPEG в Bitmap
                    } __finally {
                        delete jpg;
                    }
                } else {
                    ShowMessage("Неподдерживаемый формат файла!");
                    return;
                }

                // Отображаем изображение в PaintBox1
                PaintBox1->Canvas->CopyRect(Rect(0, 0, PaintBox1->Width, PaintBox1->Height),
                                             bmp->Canvas,
                                             Rect(0, 0, bmp->Width, bmp->Height));

            } __finally { // finally для bmp->LoadFromFile

            }
        }

    } catch (...) {
        ShowMessage("Ошибка при открытии изображения!");
    }

   // delete openDialog; // Освобождаем память
	delete bmp; // Освобождаем память
}
//---------------------------------------------------------------------------

void __fastcall TForm1::ComboBox1Change(TObject *Sender)
{
   currentLineStyle.styleIndex = ComboBox1->ItemIndex;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::ColorBox1Change(TObject *Sender)
{
currentLineStyle.color = ColorBox1->Selected;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::TrackBar1Change(TObject *Sender)
{
currentLineStyle.width = TrackBar1->Position;
}
//---------------------------------------------------------------------------

